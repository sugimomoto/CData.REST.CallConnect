<api:script xmlns:api="http://apiscript.com/ns?v1" xmlns:xs="http://www.w3.org/2001/XMLSchema">

  <!-- See Column Definitions to specify column behavior and use XPaths to extract column values from JSON. -->
  <api:info title="Tels" desc="Generated schema file." xmlns:other="http://apiscript.com/ns?v1">
    <!-- You can modify the name, type, and column size here. -->
    <attr name="id"                         xs:type="integer"  readonly="true"    key="true"          other:xPath="/json/id"                         />
    <attr name="play_mode"                  xs:type="string"   readonly="false"              other:xPath="/json/play_mode"                  />
    <attr name="first_msg"                  xs:type="string"   readonly="false"              other:xPath="/json/first_msg"                  />
    <attr name="is_record"                  xs:type="boolean"  readonly="false"              other:xPath="/json/is_record"                  />
    <attr name="is_anonymous_reject"        xs:type="boolean"  readonly="false"              other:xPath="/json/is_anonymous_reject"        />
    <attr name="created_at"                 xs:type="datetime" readonly="true"              other:xPath="/json/created_at"                 />
    <attr name="updated_at"                 xs:type="datetime" readonly="true"              other:xPath="/json/updated_at"                 />
    <attr name="twilio_phone.number"        xs:type="string"   readonly="true"              other:xPath="/json/twilio_phone/number"        />
    <attr name="twilio_phone.friendly_name" xs:type="string"   readonly="true"              other:xPath="/json/twilio_phone/friendly_name" />
  </api:info>

  <api:set attr="DataModel" value="DOCUMENT" />
  <api:set attr="JSONPath" value="$." />

  <api:set attr="header:name" value="accept"/>
  <api:set attr="header:value" value=" application/json"/>

  <api:set attr="header:name#2" value="X-Callconnect-Token"/>
  <api:set attr="header:value#2" value="[_connection.ApiToken]"/>

    <rsb:set attr="encodepostdata" value="false" />

  <!-- The GET method corresponds to SELECT. Here you can override the default processing of the SELECT statement. The results of processing are pushed to the schema's output. See SELECT Execution for more information. -->
  <api:script method="GET">

    <api:exists attr="_input.id">
      <api:set attr="URI" value="https://nlbhib5563.execute-api.ap-northeast-1.amazonaws.com/v1/tels/[_input.id]" />

      <api:else>
        <api:set attr="URI" value="https://nlbhib5563.execute-api.ap-northeast-1.amazonaws.com/v1/tels" />
      </api:else>

    </api:exists>

    <api:call op="jsonproviderGet">
      <api:push/>
    </api:call>
  </api:script>

  <!-- To add support for INSERTS please see the INSERT Execution page within the help for further information and examples. -->
  <api:script method="POST">
    <api:set attr="method" value="POST"/>
    <api:call op="jsonproviderGet">
      <api:throw code="500" desc="Inserts are not currently supported."/>
      <api:push/>
    </api:call>
  </api:script>

  <!-- To add support for UPDATES please see the UPDATE Execution page within the help for further information and examples. -->
  <api:script method="MERGE">

    <api:set attr="URI" value="https://nlbhib5563.execute-api.ap-northeast-1.amazonaws.com/v1/tels/[_input.id]" />

    <api:set attr="_input.requestData" value="def"/>

    <!-- Insertで指定されたカラムを取得 -->
    <api:enum list="[_query.selectcolumns]" separator=",">

      <!-- 初期状態のカラムは[coulmnname]の状態のため、[]を削除 -->
      <api:set attr="columnName" value="[_value | replace('\[','') | replace('\]','')]" />
      
      <api:if attr="_input.requestData" value="def" operator="equals">
        <api:set attr="_input.requestData" value='[columnName]=[_input.[columnName]]' />

        <api:else>
          <api:set attr="_input.requestData" value='[_input.requestData]&[columnName]=[_input.[columnName]]' />

        </api:else>
      </api:if>
    </api:enum>

    <api:set attr="ContentType" value="application/x-www-form-urlencoded"/>
    <api:set attr="data" value="[_input.requestData]"/>

    <api:set attr="method" value="PUT"/>
    <api:call op="jsonproviderGet">
      <api:push/>
    </api:call>
  </api:script>

  <!-- To add support for DELETES please see the DELETE Execution page within the help for further information and examples. -->
  <api:script method="DELETE">
    <api:set attr="method" value="DELETE"/>
    <api:call op="jsonproviderGet">
      <api:throw code="500" desc="Deletes are not currently supported."/>
      <api:push/>
    </api:call>
  </api:script>

</api:script>